FROM docker.io/stateoftheartio/qt6:6.7-gcc-aqt

RUN sudo apt-get update
RUN sudo apt-get install -y software-properties-common gpg wget
RUN sudo add-apt-repository ppa:deadsnakes/ppa
RUN sudo apt-get update
RUN sudo apt-get -y install \
    git \
    g++ \
    ninja-build \
    curl \
    pkg-config \
    unzip \
    python3-pip \
    libglib2.0-0 \
    libssl-dev \
    libopus-dev  \
    libgl1-mesa-dev \
    nasm \
    libudev-dev \
    librsvg2-dev \
    gobject-introspection \
    libva-dev \
    fuse \
    appstream \
    file \
    libevdev-dev \
    libudev-dev \
    libhidapi-dev \
    libfftw3-dev \
    libspeexdsp-dev \
    libdrm-dev \
    liblcms2-dev \
    libvulkan-dev \
    libxkbcommon-dev \
    libasound2-dev  \
    libminiupnpc-dev \
    libjson-c-dev

RUN sudo pip3 install protobuf==3.19.5
RUN sudo pip3 install meson==1.3.0
RUN sudo pip3 install aqtinstall==3.1.18
RUN sudo aqt install-qt -O ${QT_PATH} linux desktop ${QT_VERSION} linux_gcc_64 -m qtwebengine qtpositioning qtwebchannel qtwebsockets qtserialport
RUN curl -LO https://raw.githubusercontent.com/state-of-the-art/qt6-docker/refs/heads/master/6.7-gcc-aqt/install_packages.sh
RUN chmod +x install_packages.sh
RUN sudo "${PWD}/install_packages.sh"
RUN (curl -L https://apt.kitware.com/kitware-archive.sh | sudo bash) && sudo apt-get -y install cmake

RUN wget https://github.com/KhronosGroup/Vulkan-Headers/archive/v1.3.287.tar.gz && \
    tar xf v1.3.287.tar.gz && \
    cd Vulkan-Headers-1.3.287 && \
    cmake -Bbuild -GNinja -DCMAKE_INSTALL_PREFIX=/usr && \
    sudo ninja -Cbuild install

RUN wget https://github.com/KhronosGroup/glslang/archive/13.1.1.tar.gz && \
    tar xf 13.1.1.tar.gz && \
    cd glslang-13.1.1 && \
    cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DALLOW_EXTERNAL_SPIRV_TOOLS=ON -DBUILD_SHARED_LIBS=OFF && \
    sudo ninja -Cbuild install

RUN wget https://gitlab.freedesktop.org/pipewire/pipewire/-/archive/0.3.44/pipewire-0.3.44.tar.gz && \
    tar xf pipewire-0.3.44.tar.gz && \
    cd pipewire-0.3.44 && \
    meson setup --prefix=/usr -Ddbus=disabled -Dsession-managers=[] build && \
    sudo ninja -Cbuild install

CMD []
